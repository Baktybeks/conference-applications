// src/components/conferences/CreateConferenceModal.tsx - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
"use client";

import React, { useState } from "react";
import { Modal, ModalFooter } from "@/components/ui/Modal";
import { Button } from "@/components/ui/Button";
import { Input } from "@/components/ui/Input";
import { Select } from "@/components/ui/Select";
import { useCreateConference } from "@/services/conferenceService";
import { useAuth } from "@/hooks/useAuth";
import { toast } from "react-toastify";
import {
  CreateConferenceDto,
  ConferenceTheme,
  ParticipationType,
  getConferenceThemeLabel,
} from "@/types";
import { Plus, Calendar, MapPin, Users, Clock, FileText } from "lucide-react";

interface CreateConferenceModalProps {
  isOpen: boolean;
  onClose: () => void;
}

// –û–ø—Ü–∏–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–º–∞—Ç–∏–∫–∏
const CONFERENCE_THEMES = Object.values(ConferenceTheme).map((theme) => ({
  value: theme,
  label: getConferenceThemeLabel(theme),
}));

// –û–ø—Ü–∏–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —É—á–∞—Å—Ç–∏—è
const PARTICIPATION_TYPES = [
  { value: ParticipationType.OFFLINE, label: "–û—á–Ω–æ" },
  { value: ParticipationType.ONLINE, label: "–û–Ω–ª–∞–π–Ω" },
  { value: ParticipationType.HYBRID, label: "–ì–∏–±—Ä–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç" },
];

export function CreateConferenceModal({
  isOpen,
  onClose,
}: CreateConferenceModalProps) {
  const { user } = useAuth();
  const createConferenceMutation = useCreateConference();

  const [formData, setFormData] = useState<CreateConferenceDto>({
    title: "",
    description: "",
    theme: "" as ConferenceTheme,
    participationType: "" as ParticipationType,
    startDate: "",
    endDate: "",
    location: "",
    submissionDeadline: "",
    maxParticipants: undefined,
    registrationFee: undefined,
    requirements: "",
    contactEmail: user?.email || "",
    website: "",
  });

  const [errors, setErrors] = useState<Record<string, string>>({});

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è handleChange
  const handleChange = (
    field: keyof CreateConferenceDto,
    value: string | number | ConferenceTheme | ParticipationType | undefined
  ) => {
    setFormData((prev) => ({
      ...prev,
      [field]: value,
    }));

    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[field]) {
      setErrors((prev) => ({
        ...prev,
        [field]: "",
      }));
    }
  };

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  const handleNumberChange = (
    field: "maxParticipants" | "registrationFee",
    value: string
  ) => {
    const numValue = value === "" ? undefined : parseInt(value, 10);
    handleChange(field, isNaN(numValue || 0) ? undefined : numValue);
  };

  const validateForm = (): boolean => {
    const newErrors: Record<string, string> = {};

    if (!formData.title.trim()) {
      newErrors.title = "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ";
    }

    if (!formData.description.trim()) {
      newErrors.description = "–û–ø–∏—Å–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ";
    }

    if (!formData.theme) {
      newErrors.theme = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É";
    }

    if (!formData.participationType) {
      newErrors.participationType = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—á–∞—Å—Ç–∏—è";
    }

    if (!formData.startDate) {
      newErrors.startDate = "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞";
    }

    if (!formData.endDate) {
      newErrors.endDate = "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞";
    }

    if (formData.startDate && formData.endDate) {
      if (new Date(formData.startDate) >= new Date(formData.endDate)) {
        newErrors.endDate = "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞";
      }
    }

    if (!formData.location.trim()) {
      newErrors.location = "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ";
    }

    if (!formData.submissionDeadline) {
      newErrors.submissionDeadline = "–î–µ–¥–ª–∞–π–Ω –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω";
    }

    if (formData.submissionDeadline && formData.startDate) {
      if (
        new Date(formData.submissionDeadline) >= new Date(formData.startDate)
      ) {
        newErrors.submissionDeadline =
          "–î–µ–¥–ª–∞–π–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏";
      }
    }

    if (!formData.contactEmail.trim()) {
      newErrors.contactEmail = "–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω";
    }

    if (formData.maxParticipants && formData.maxParticipants < 1) {
      newErrors.maxParticipants = "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0";
    }

    if (formData.registrationFee && formData.registrationFee < 0) {
      newErrors.registrationFee = "–°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!validateForm() || !user) return;

    try {
      await createConferenceMutation.mutateAsync({
        data: formData,
        organizerId: user.$id,
      });

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      toast.success("üéâ –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!", {
        position: "top-center",
        autoClose: 6000,
      });

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
      onClose();
      resetForm();
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏:", error);
      toast.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è", {
        position: "top-center",
        autoClose: 6000,
      });
    }
  };

  const handleButtonSubmit = async () => {
    if (!validateForm() || !user) return;

    try {
      await createConferenceMutation.mutateAsync({
        data: formData,
        organizerId: user.$id,
      });

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      toast.success("üéâ –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!", {
        position: "top-center",
        autoClose: 6000,
      });

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
      onClose();
      resetForm();
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏:", error);
      toast.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è", {
        position: "top-center",
        autoClose: 6000,
      });
    }
  };

  const resetForm = () => {
    setFormData({
      title: "",
      description: "",
      theme: "" as ConferenceTheme,
      participationType: "" as ParticipationType,
      startDate: "",
      endDate: "",
      location: "",
      submissionDeadline: "",
      maxParticipants: undefined,
      registrationFee: undefined,
      requirements: "",
      contactEmail: user?.email || "",
      website: "",
    });
    setErrors({});
  };

  const handleClose = () => {
    if (!createConferenceMutation.isPending) {
      resetForm();
      onClose();
    }
  };

  return (
    <Modal
      isOpen={isOpen}
      onClose={handleClose}
      title="üéØ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é"
      size="xl"
    >
      <form onSubmit={handleSubmit} className="space-y-8">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="space-y-6">
          <div className="flex items-center space-x-3 pb-3 border-b border-gray-200">
            <div className="flex items-center justify-center w-8 h-8 bg-indigo-100 rounded-full">
              <FileText className="h-4 w-4 text-indigo-600" />
            </div>
            <h3 className="text-lg font-semibold text-gray-900">
              –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </h3>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="md:col-span-2">
              <Input
                label="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ *"
                value={formData.title}
                onChange={(e) => handleChange("title", e.target.value)}
                error={errors.title}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏"
                className="text-lg"
              />
            </div>

            <Select
              label="–¢–µ–º–∞—Ç–∏–∫–∞ *"
              value={formData.theme}
              onChange={(e) =>
                handleChange("theme", e.target.value as ConferenceTheme)
              }
              options={CONFERENCE_THEMES}
              error={errors.theme}
              placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É"
            />

            <Select
              label="–¢–∏–ø —É—á–∞—Å—Ç–∏—è *"
              value={formData.participationType}
              onChange={(e) =>
                handleChange(
                  "participationType",
                  e.target.value as ParticipationType
                )
              }
              options={PARTICIPATION_TYPES}
              error={errors.participationType}
              placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—á–∞—Å—Ç–∏—è"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –û–ø–∏—Å–∞–Ω–∏–µ *
            </label>
            <textarea
              rows={4}
              value={formData.description}
              onChange={(e) => handleChange("description", e.target.value)}
              className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 resize-none"
              placeholder="–û–ø–∏—à–∏—Ç–µ —Ü–µ–ª–∏, —Ç–µ–º—ã –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏..."
            />
            {errors.description && (
              <p className="mt-2 text-sm text-red-600">{errors.description}</p>
            )}
          </div>
        </div>

        {/* –î–∞—Ç—ã –∏ –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è */}
        <div className="space-y-6">
          <div className="flex items-center space-x-3 pb-3 border-b border-gray-200">
            <div className="flex items-center justify-center w-8 h-8 bg-green-100 rounded-full">
              <Calendar className="h-4 w-4 text-green-600" />
            </div>
            <h3 className="text-lg font-semibold text-gray-900">
              –î–∞—Ç—ã –∏ –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
            </h3>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Input
              label="–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ *"
              type="date"
              value={formData.startDate}
              onChange={(e) => handleChange("startDate", e.target.value)}
              error={errors.startDate}
            />

            <Input
              label="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è *"
              type="date"
              value={formData.endDate}
              onChange={(e) => handleChange("endDate", e.target.value)}
              error={errors.endDate}
            />

            <Input
              label="–î–µ–¥–ª–∞–π–Ω –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ *"
              type="datetime-local"
              value={formData.submissionDeadline}
              onChange={(e) =>
                handleChange("submissionDeadline", e.target.value)
              }
              error={errors.submissionDeadline}
            />

            <Input
              label="–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ *"
              value={formData.location}
              onChange={(e) => handleChange("location", e.target.value)}
              error={errors.location}
              placeholder="–ì–æ—Ä–æ–¥, –∞–¥—Ä–µ—Å –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–Ω–ª–∞–π–Ω"
              icon={MapPin}
            />
          </div>
        </div>

        {/* –ó–∞—è–≤–∫–∏ –∏ —É—á–∞—Å—Ç–∏–µ */}
        <div className="space-y-6">
          <div className="flex items-center space-x-3 pb-3 border-b border-gray-200">
            <div className="flex items-center justify-center w-8 h-8 bg-blue-100 rounded-full">
              <Users className="h-4 w-4 text-blue-600" />
            </div>
            <h3 className="text-lg font-semibold text-gray-900">
              –ó–∞—è–≤–∫–∏ –∏ —É—á–∞—Å—Ç–∏–µ
            </h3>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Input
              label="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
              type="number"
              value={formData.maxParticipants?.toString() || ""}
              onChange={(e) =>
                handleNumberChange("maxParticipants", e.target.value)
              }
              error={errors.maxParticipants}
              placeholder="–ù–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ"
              min="1"
            />

            <Input
              label="–°—Ç–æ–∏–º–æ—Å—Ç—å —É—á–∞—Å—Ç–∏—è (—Å–æ–º)"
              type="number"
              value={formData.registrationFee?.toString() || ""}
              onChange={(e) =>
                handleNumberChange("registrationFee", e.target.value)
              }
              error={errors.registrationFee}
              placeholder="–ë–µ—Å–ø–ª–∞—Ç–Ω–æ"
              min="0"
            />

            <Input
              label="–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π email *"
              type="email"
              value={formData.contactEmail}
              onChange={(e) => handleChange("contactEmail", e.target.value)}
              error={errors.contactEmail}
              placeholder="contact@conference.org"
            />

            <Input
              label="–í–µ–±-—Å–∞–π—Ç –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏"
              type="url"
              value={formData.website || ""}
              onChange={(e) => handleChange("website", e.target.value)}
              placeholder="https://conference.org"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∑–∞—è–≤–∫–∞–º
            </label>
            <textarea
              rows={3}
              value={formData.requirements || ""}
              onChange={(e) => handleChange("requirements", e.target.value)}
              className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 resize-none"
              placeholder="–û–ø–∏—à–∏—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–æ–∫–ª–∞–¥–∞–º, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞—è–≤–æ–∫, —è–∑—ã–∫—É –∏ –¥—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ —É—Å–ª–æ–≤–∏—è..."
            />
          </div>
        </div>
      </form>

      <ModalFooter>
        <Button
          variant="outline"
          onClick={handleClose}
          disabled={createConferenceMutation.isPending}
          className="w-full sm:w-auto"
        >
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button
          type="submit"
          onClick={handleButtonSubmit}
          loading={createConferenceMutation.isPending}
          icon={Plus}
          className="w-full sm:w-auto sm:ml-3"
        >
          –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é
        </Button>
      </ModalFooter>
    </Modal>
  );
}
